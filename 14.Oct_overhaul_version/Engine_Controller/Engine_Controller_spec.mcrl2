act
r_power, s_power, c_power: Nat # Bool;
r_requestcheckfuel, s_requestcheckfuel, c_requestcheckfuel: Nat;
r_responsecheckfuel, s_responsecheckfuel, c_responsecheckfuel: Nat # Bool;
r_requestfix, s_requestfix, c_requestfix: Nat;
r_requestcheck, s_requestcheck, c_requestcheck: Nat;
r_responsecheck, s_responsecheck, c_responsecheck: Nat # Bool;

check: Nat # Nat;
fix: Nat;
power: Nat # Bool;
checkfuel: Nat;

proc
EC = r_requestcheck(3) . EC_requestcheck(0) + r_requestfix(3) . EC_requestfix + sum module: Nat.(module <= 2) -> (EC_checkfuel(module) + EC_power(module));

EC_checkfuel(module: Nat) = r_requestcheckfuel(module) . checkfuel(module) . sum b: Bool . s_responsecheckfuel(module,b) . EC;

EC_power(module: Nat) = sum b: Bool . r_power(module,b) . power(module,b) . EC;

EC_requestcheck(module: Nat) = (module<3) -> ((module<2) -> check(3,module) . EC_requestcheck(module+1) <> check(3,module) . sum b: Bool .  s_responsecheck(3,b) . EC);

EC_requestfix = sum module: Nat . (module<3) -> fix(module) . sum b: Bool . s_responsecheck(3, b) . EC;

init
EC;